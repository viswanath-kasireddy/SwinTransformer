{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fWoMdr1yzvnW","executionInfo":{"status":"ok","timestamp":1702113268662,"user_tz":360,"elapsed":11501,"user":{"displayName":"Nick Martin","userId":"16771421555501776874"}},"outputId":"c2ea816c-1d1b-4737-e40c-8d6e4f4246c1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting git+https://github.com/ChristophReich1996/Swin-Transformer-V2\n","  Cloning https://github.com/ChristophReich1996/Swin-Transformer-V2 to /tmp/pip-req-build-pq0qffam\n","  Running command git clone --filter=blob:none --quiet https://github.com/ChristophReich1996/Swin-Transformer-V2 /tmp/pip-req-build-pq0qffam\n","  Resolved https://github.com/ChristophReich1996/Swin-Transformer-V2 to commit 7b74308bd560a5efabc0f9610d038dcf8e61226e\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: torch>=1.7.0 in /usr/local/lib/python3.10/dist-packages (from swin-transformer-v2==0.1) (2.1.0+cu118)\n","Requirement already satisfied: timm>=0.4.12 in /usr/local/lib/python3.10/dist-packages (from swin-transformer-v2==0.1) (0.9.12)\n","Requirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (from timm>=0.4.12->swin-transformer-v2==0.1) (0.16.0+cu118)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from timm>=0.4.12->swin-transformer-v2==0.1) (6.0.1)\n","Requirement already satisfied: huggingface-hub in /usr/local/lib/python3.10/dist-packages (from timm>=0.4.12->swin-transformer-v2==0.1) (0.19.4)\n","Requirement already satisfied: safetensors in /usr/local/lib/python3.10/dist-packages (from timm>=0.4.12->swin-transformer-v2==0.1) (0.4.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->swin-transformer-v2==0.1) (3.13.1)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->swin-transformer-v2==0.1) (4.5.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->swin-transformer-v2==0.1) (1.12)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->swin-transformer-v2==0.1) (3.2.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->swin-transformer-v2==0.1) (3.1.2)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->swin-transformer-v2==0.1) (2023.6.0)\n","Requirement already satisfied: triton==2.1.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->swin-transformer-v2==0.1) (2.1.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface-hub->timm>=0.4.12->swin-transformer-v2==0.1) (2.31.0)\n","Requirement already satisfied: tqdm>=4.42.1 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub->timm>=0.4.12->swin-transformer-v2==0.1) (4.66.1)\n","Requirement already satisfied: packaging>=20.9 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub->timm>=0.4.12->swin-transformer-v2==0.1) (23.2)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.7.0->swin-transformer-v2==0.1) (2.1.3)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch>=1.7.0->swin-transformer-v2==0.1) (1.3.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from torchvision->timm>=0.4.12->swin-transformer-v2==0.1) (1.23.5)\n","Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision->timm>=0.4.12->swin-transformer-v2==0.1) (9.4.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub->timm>=0.4.12->swin-transformer-v2==0.1) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub->timm>=0.4.12->swin-transformer-v2==0.1) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub->timm>=0.4.12->swin-transformer-v2==0.1) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub->timm>=0.4.12->swin-transformer-v2==0.1) (2023.11.17)\n"]}],"source":["import os\n","import tensorflow as tf\n","!pip install git+https://github.com/ChristophReich1996/Swin-Transformer-V2\n","import tensorflow_addons as tfa\n","from tensorflow.keras import layers, models\n","from tensorflow import keras\n","from swin_transformer_v2 import swin_transformer_v2_t, SwinTransformerV2\n","import numpy as np\n","import os\n","import time\n"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nwtNde600vQl","executionInfo":{"status":"ok","timestamp":1702112738644,"user_tz":360,"elapsed":16183,"user":{"displayName":"Nick Martin","userId":"16771421555501776874"}},"outputId":"7c0e675e-f47c-4718-9927-5659b0d10007"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["\n","\n","batch_size = 32 # This is a tunable hyperparameter\n","shape = (128, 128) # note we are reducing the size of the image\n","rng = np.random.default_rng(2022)\n","\n","data_dir = '/content/drive/MyDrive/Final_Project/Dataset'\n","\n","train_ds = tf.keras.utils.image_dataset_from_directory(os.path.join(data_dir, 'train/train'),\n","                                                       seed=rng.integers(500000),\n","                                                       image_size=shape,\n","                                                       label_mode=\"categorical\",\n","                                                       color_mode='grayscale',\n","                                                       batch_size=batch_size)\n","train_ds_new = tf.keras.utils.image_dataset_from_directory(os.path.join(data_dir, 'train_new'),\n","                                                       seed=rng.integers(500000),\n","                                                       image_size=shape,\n","                                                       label_mode=\"categorical\",\n","                                                       color_mode='grayscale',\n","                                                       batch_size=batch_size)\n","val_ds = tf.keras.utils.image_dataset_from_directory(os.path.join(data_dir, 'validation/validation'),\n","                                                     seed=rng.integers(500000),\n","                                                     image_size=shape,\n","                                                     label_mode=\"categorical\",\n","                                                     color_mode='grayscale',\n","                                                     batch_size=batch_size)\n","test_ds = tf.keras.utils.image_dataset_from_directory(os.path.join(data_dir, 'test_new'),\n","                                                      seed=rng.integers(500000),\n","                                                      image_size=shape,\n","                                                      label_mode=\"categorical\",\n","                                                      color_mode='grayscale',\n","                                                      batch_size=batch_size)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v3RTBQLR0iT0","executionInfo":{"status":"ok","timestamp":1702112841775,"user_tz":360,"elapsed":97616,"user":{"displayName":"Nick Martin","userId":"16771421555501776874"}},"outputId":"b2097b1c-7f0c-419a-c881-61511c9a028e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 20000 files belonging to 4 classes.\n","Found 16000 files belonging to 4 classes.\n","Found 4000 files belonging to 4 classes.\n","Found 4000 files belonging to 4 classes.\n"]}]},{"cell_type":"code","source":["# Swin Transformer model\n","def build_swin_transformer(input_shape, num_classes):\n","    model = models.Sequential()\n","\n","    # Swin Transformer backbone\n","    model.add(tfa.layers.SwinTransformer(\n","        img_size=input_shape[:2],\n","        patch_size=(4, 4),\n","        num_classes=num_classes,\n","        num_transformer_blocks=12,\n","        num_heads=4,\n","        mlp_dim=128,\n","        qkv_bias=True,\n","        dropout=0.1,\n","        attention_dropout=0.1,\n","        mlp_dropout=0.1,\n","    ))\n","\n","    # Global Average Pooling\n","    model.add(layers.GlobalAveragePooling2D())\n","\n","    return model\n","\n","\n"],"metadata":{"id":"Y9g3Iaqd0j61"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Define the Swin Transformer model\n","num_classes = 4\n","swin_model = build_swin_transformer(shape + (1,), num_classes)\n","\n","# Compile the model\n","swin_model.compile(\n","    optimizer='adam',\n","    loss='categorical_crossentropy',\n","    metrics=['accuracy']\n",")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"id":"t1FqmmS50lbe","executionInfo":{"status":"error","timestamp":1702112911425,"user_tz":360,"elapsed":142,"user":{"displayName":"Nick Martin","userId":"16771421555501776874"}},"outputId":"98be2996-488c-452b-acdc-515ce5268e04"},"execution_count":null,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-9058f084f423>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Define the Swin Transformer model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mnum_classes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mswin_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_swin_transformer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mshape\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_classes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Compile the model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-9-c098d3ebd069>\u001b[0m in \u001b[0;36mbuild_swin_transformer\u001b[0;34m(input_shape, num_classes)\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0;31m# Swin Transformer backbone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m     model.add(tfa.layers.SwinTransformer(\n\u001b[0m\u001b[1;32m      7\u001b[0m         \u001b[0mimg_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minput_shape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m         \u001b[0mpatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: module 'tensorflow_addons.layers' has no attribute 'SwinTransformer'"]}]},{"cell_type":"code","source":["# Train the model\n","swin_model.fit(train_ds_new, validation_data=val_ds, epochs=10)\n"],"metadata":{"id":"quf-EbkN1ICS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Evaluate on the test set\n","test_loss, test_accuracy = swin_model.evaluate(test_ds)\n","print(f'Test Accuracy: {test_accuracy * 100:.2f}%')"],"metadata":{"id":"JwCGe3cV1IDq"},"execution_count":null,"outputs":[]}]}